// Copyright Â© 2023 OpenIM. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";
package openim.group;

import "sdkws/sdkws.proto";
import "wrapperspb/wrapperspb.proto";

option go_package = "github.com/SupersStone/new-protocol/group";

message CreateGroupReq {
  repeated string memberUserIDs = 1;
  openim.sdkws.GroupInfo groupInfo = 2;
  repeated string adminUserIDs = 3;
  string ownerUserID = 4; //owner
}
message CreateGroupResp {
  openim.sdkws.GroupInfo groupInfo = 1;
  repeated openim.sdkws.UserFullInfo filterUser = 2;
  repeated openim.sdkws.UserFullInfo blockUser = 3;
}

message ResetGroupLinkReq {
  string groupID = 1;
}

message ResetGroupLinkResp {
  string linkUrl = 1;
}

message GetGroupsInfoReq {
  repeated string groupIDs = 1;
}
message GetGroupsInfoResp {
  repeated openim.sdkws.GroupInfo groupInfos = 1;
}

message SetGroupInfoReq {
  openim.sdkws.GroupInfoForSet groupInfoForSet = 1;
}
message SetGroupInfoResp {}

message SetGroupInfoExReq {
  string groupID = 1;
  openim.protobuf.StringValue groupName = 2;
  openim.protobuf.StringValue notification = 3;
  openim.protobuf.StringValue introduction = 4;
  openim.protobuf.StringValue faceURL = 5;
  openim.protobuf.StringValue ex = 6;
  openim.protobuf.Int32Value needVerification = 7;
  openim.protobuf.Int32Value lookMemberInfo = 8;
  openim.protobuf.Int32Value applyMemberFriend = 9;
  openim.protobuf.Int32Value editGroupBaseInfo = 10;
  openim.protobuf.Int32Value groupLinkStatus = 11;
  openim.protobuf.StringValue groupLink = 12;
  openim.protobuf.Int32Value groupLinkEntryVerify = 13;
  openim.protobuf.Int32Value autoDeleteMsg = 14;
  openim.protobuf.Int32Value autoDeleteDuration = 15;

}
message SetGroupInfoExResp {}

message SetGroupInfoExForAllReq {
  repeated SetGroupInfoExReq SetGroupInfoEx = 1;
}

message SetGroupInfoExForAllResp {}

message GetGroupApplicationListReq {
  openim.sdkws.RequestPagination pagination = 1;
  string fromUserID = 2; //owner or admin
  string groupID = 3;
}
message GetGroupApplicationListResp {
  uint32 total = 1;
  repeated openim.sdkws.GroupRequest groupRequests = 2;
}

message GetUserReqApplicationListReq {
  openim.sdkws.RequestPagination pagination = 1;
  string userID = 2;
}

message GetUserReqApplicationListResp {
  uint32 total = 1;
  repeated openim.sdkws.GroupRequest groupRequests = 2;
}

message GetSpecifiedUserGroupRequestInfoReq {
  string groupID = 1;
  string userID = 2;
}

message GetSpecifiedUserGroupRequestInfoResp {
  uint32 total = 1;
  repeated openim.sdkws.GroupRequest groupRequests = 2;
}

message TransferGroupOwnerReq {
  string groupID = 1;
  string oldOwnerUserID = 2;
  string newOwnerUserID = 3;
}
message TransferGroupOwnerResp {}

message GetGroupRelationByUserReq {
  string groupID = 1;
  string timestamp = 2;
  string signature = 3;
  string userID = 4;
  string requestURL=5;
}
message GetGroupRelationByUserResp {
  int32 groupStatus = 1;
  string groupMessage = 2;
  string faceUrl = 3;
  string groupName = 4;
  int32 memberCount = 5;
  int32 applyTime = 6;
  string groupId = 7;
}

message JoinGroupReq {
  string groupID = 1;
  string reqMessage = 2;
  int32 joinSource = 3;
  string inviterUserID = 4;
  string ex = 5;
}
message JoinGroupResp {}

message RevokeApplyReq {
  string userID = 1;
  string groupID = 2;
}

message RevokeApplyResp {}

message GroupApplicationResponseReq {
  string groupID = 1;
  string fromUserID = 2; //
  string handledMsg = 3;
  int32 handleResult = 4;
}
message GroupApplicationResponseResp {}

message QuitGroupReq {
  string groupID = 1;
  string userID = 2;
}
message QuitGroupResp {}

message GetGroupMemberListReq {
  openim.sdkws.RequestPagination pagination = 1;
  string groupID = 2;
  int32 filter = 3;
  string keyword = 4;
}

message GetGroupMemberListResp {
  uint32 total = 1;
  repeated openim.sdkws.GroupMemberFullInfo members = 2;
}

message GetGroupMembersInfoReq {
  string groupID = 1;
  repeated string userIDs = 2;
}

message GetGroupMembersInfoResp {
  repeated openim.sdkws.GroupMemberFullInfo members = 1;
}

message KickGroupMemberReq {
  string groupID = 1;
  repeated string kickedUserIDs = 2;
  string reason = 3;
}

message KickGroupMemberResp {}

message BlockGroupMemberReq {
  string groupID = 1;
  string blockUserID = 2;
}

message DeleteBlockGroupMemberReq {
  string groupID = 1;
  string blockUserID = 2;
}

message DeleteBlockGroupMemberResp{}

message AfreshJoinGroupReq {
  string groupID = 1;
  string invitedUserID = 2;
  string reason = 3;
}

message AfreshJoinGroupResp {}


message GroupMemberBlocksReq {
  openim.sdkws.RequestPagination pagination = 1;
  string groupID = 2;
}

//message GroupMemberBlock {
//  string GroupID = 1;
//  string OwnerUserID = 2;
//  string BlockUserID = 3;
//  int64 CreateTime = 4;
//  string OperatorUserID = 5;
//  string Ex = 6;
//  openim.protobuf.StringValue OwnerUserName = 7;
//  openim.protobuf.StringValue BlockUserName = 8;
//  openim.protobuf.StringValue BlockFaceUrl = 9;
//  openim.protobuf.StringValue BlockSurName = 10;
//  openim.protobuf.StringValue BlockName = 11;
//}

//message GroupMemberBlock {
//  string GroupID = 1 [json_name = "GroupID"];
//  string OwnerUserID = 2 [json_name = "OwnerUserID"];
//  string BlockUserID = 3 [json_name = "BlockUserID"];
//  int64 CreateTime = 4 [json_name = "CreateTime"];
//  string OperatorUserID = 5 [json_name = "OperatorUserID"];
//  string Ex = 6 [json_name = "Ex"];
//  string OwnerUserName = 7 [json_name = "OwnerUserName"];
//  string BlockUserName = 8 [json_name = "BlockUserName"];
//  string BlockFaceUrl = 9 [json_name = "BlockFaceUrl"];
//  string BlockSurName = 10 [json_name = "BlockSurName"];
//  string BlockName = 11 [json_name = "BlockName"];
//}


message GroupMemberBlock {
  string GroupID = 1 [json_name = "GroupID"];
  string OwnerUserID = 2 [json_name = "OwnerUserID"];
  string BlockUserID = 3 [json_name = "BlockUserID"];
  int64 CreateTime = 4 [json_name = "CreateTime"];
  string OperatorUserID = 5 [json_name = "OperatorUserID"];
  string Ex = 6 [json_name = "Ex"];
  string OwnerUserName = 7 [json_name = "OwnerUserName"];
  string BlockUserName = 8 [json_name = "BlockUserName"];
  string BlockFaceUrl = 9 [json_name = "BlockFaceUrl"];
  string BlockSurName = 10 [json_name = "BlockSurName"];
  string BlockName = 11 [json_name = "BlockName"];
}

message GroupMemberBlocksResp {
  int64 total = 1;
  repeated GroupMemberBlock blocks = 2;
}

message BlockGroupMemberResp {}

message GetJoinedGroupListReq {
  openim.sdkws.RequestPagination pagination = 1;
  string fromUserID = 2;
}
message GetJoinedGroupListResp {
  uint32 total = 1;
  repeated openim.sdkws.GroupInfo groups = 2;
}

message InviteUserToGroupReq {
  string groupID = 1;
  string reason = 2;
  repeated string invitedUserIDs = 3;
}
message InviteUserToGroupResp {
  repeated openim.sdkws.UserFullInfo filterUser = 1;
  repeated openim.sdkws.UserFullInfo blockUser = 2;
  repeated openim.sdkws.UserFullInfo banUser = 3;
}

message GetGroupAllMemberReq {
  openim.sdkws.RequestPagination pagination = 1;
  string groupID = 2;
}
message GetGroupAllMemberResp {
  repeated openim.sdkws.GroupMemberFullInfo members = 1;
}

message CMSGroup {
  openim.sdkws.GroupInfo groupInfo = 1;
  string groupOwnerUserName = 2;
  string groupOwnerUserID = 3;
}

message GetGroupsReq {
  openim.sdkws.RequestPagination pagination = 1;
  string groupName = 2;
  string groupID = 3;
}

message GetGroupsResp {
  uint32 total = 1;
  repeated CMSGroup groups = 2;
}

message GetGroupMemberReq {
  string groupID = 1;
}

message GetGroupMembersCMSReq {
  openim.sdkws.RequestPagination pagination = 1;
  string groupID = 2;
  string userName = 3;
}

message GetGroupMembersCMSResp {
  uint32 total = 1;
  repeated openim.sdkws.GroupMemberFullInfo members = 2;
}

message DismissGroupReq {
  string groupID = 1;
  bool deleteMember = 2;
}

message DismissGroupResp {}

message MuteGroupMemberReq {
  string groupID = 1;
  string userID = 2;
  uint32 mutedSeconds = 3;
}

message MuteGroupMemberResp {}

message CancelMuteGroupMemberReq {
  string groupID = 1;
  string userID = 2;
}

message CancelMuteGroupMemberResp {}

message MuteGroupReq {
  string groupID = 1;
}

message MuteGroupResp {}

message CancelMuteGroupReq {
  string groupID = 1;
}

message CancelMuteGroupResp {}

message SetGroupMemberInfo {
  string groupID = 1;
  string userID = 2;
  openim.protobuf.StringValue nickname = 3;
  openim.protobuf.StringValue faceURL = 4;
  openim.protobuf.Int32Value roleLevel = 5;
  openim.protobuf.StringValue ex = 6;
}

message SetGroupMemberInfoReq {
  repeated SetGroupMemberInfo members = 1;
}

message SetGroupMemberInfoResp {}

message GetGroupAbstractInfoReq {
  repeated string groupIDs = 1;
}

message GroupAbstractInfo {
  string groupID = 1;
  uint32 groupMemberNumber = 2;
  uint64 groupMemberListHash = 3;
}

message GetGroupAbstractInfoResp {
  repeated GroupAbstractInfo groupAbstractInfos = 1;
}

message GetUserInGroupMembersReq {
  string userID = 1;
  repeated string groupIDs = 2;
}

message GetUserInGroupMembersResp {
  repeated openim.sdkws.GroupMemberFullInfo members = 1;
}

message GetGroupMemberUserIDsReq {
  string groupID = 1;
}

message GetGroupMemberUserIDsResp {
  repeated string userIDs = 1;
}

message GetGroupMemberRoleLevelReq {
  string groupID = 1;
  repeated int32 roleLevels = 2;
}

message GetGroupMemberRoleLevelResp {
  repeated openim.sdkws.GroupMemberFullInfo members = 1;
}

message GetGroupInfoCacheReq {
  string groupID = 1;
}

message GetGroupInfoCacheResp {
  openim.sdkws.GroupInfo groupInfo = 1;
}

message GetGroupMemberCacheReq {
  string groupID = 1;
  string groupMemberID = 2;
}

message GetGroupMemberCacheResp {
  openim.sdkws.GroupMemberFullInfo member = 1;
}

message GroupCreateCountReq {
  int64 start = 1;
  int64 end = 2;
}

message GroupCreateCountResp {
  int64 total = 1;
  int64 before = 2;
  map<string, int64> count = 3;
}

message getGroupUsersReqApplicationListReq {
  string groupID = 1;
  repeated string userIDs = 2;
}

message getGroupUsersReqApplicationListResp {
  int64 total = 1;
  repeated openim.sdkws.GroupRequest groupRequests = 2;
}

message notificationUserInfoUpdateReq {
  string userID = 1;
  openim.sdkws.UserInfo oldUserInfo = 2;
  openim.sdkws.UserInfo newUserInfo = 3;
}

message notificationUserInfoUpdateResp {}

message getIncrementalGroupMemberReq {
  string groupID = 1;
  string versionID = 2;
  uint64 version = 3;
}

message getIncrementalGroupMemberResp {
  uint64 version = 1;
  string versionID = 2;
  bool full = 3;
  repeated string delete = 4;
  repeated openim.sdkws.GroupMemberFullInfo insert = 5;
  repeated openim.sdkws.GroupMemberFullInfo update = 6;
  openim.sdkws.GroupInfo group = 7;
  uint64 sortVersion = 8;
}

message getIncrementalJoinGroupReq {
  string userID = 1;
  string versionID = 2;
  uint64 version = 3;
}

message getIncrementalJoinGroupResp {
  uint64 version = 1;
  string versionID = 2;
  bool full = 3;
  repeated string delete = 4;
  repeated openim.sdkws.GroupInfo insert = 5;
  repeated openim.sdkws.GroupInfo update = 6;
  uint64 sortVersion = 7;
}

message GetFullGroupMemberUserIDsReq {
  uint64 idHash = 1;
  string groupID = 2;
}

message GetFullGroupMemberUserIDsResp {
  uint64 version = 1;
  string versionID = 2;
  bool equal = 3;
  repeated string userIDs = 4;
}

message GetFullJoinGroupIDsReq {
  uint64 idHash = 1;
  string userID = 2;
}

message GetFullJoinGroupIDsResp {
  uint64 version = 1;
  string versionID = 2;
  bool equal = 3;
  repeated string groupIDs = 4;
}

message BatchGetIncrementalGroupMemberReq {
  string userID = 1;
  repeated getIncrementalGroupMemberReq reqList = 2;
}

message BatchGetIncrementalGroupMemberResp {
  map<string, getIncrementalGroupMemberResp> respList = 1;
}

message KeyVersion {
  string groupID = 1;
  string version = 2;
  bytes keyHash = 3;
  string createTime = 4;
}

message GetGroupKeyVersionReq {
  string groupID = 1;
}

message GetGroupKeyVersionResp {
  repeated KeyVersion respList = 1;
}

message UpdateGroupRoomRecordReq {
  string groupID = 1;
  string roomName = 2;
  string identity = 3;
  int32 memberNumber = 4;
  int32 status = 5;
  int32 createTime = 6;
  int32 duration = 7;
  string type = 8;
}

message UpdateGroupRoomRecordResp {}

service group {
  //éè¿ç¨æ·ç¼å·è·åä¸ç¾¤çå³ç³»
  rpc GetGroupRelationByUser(GetGroupRelationByUserReq) returns (GetGroupRelationByUserResp);
  //åå»ºç¾¤
  rpc createGroup(CreateGroupReq) returns (CreateGroupResp);
  //éç½®ç¾¤ç»é¾æ¥
  rpc resetGroupLink(ResetGroupLinkReq) returns (ResetGroupLinkResp);
  //ç³è¯·å ç¾¤
  rpc joinGroup(JoinGroupReq) returns (JoinGroupResp);
  //æ¤åç³è¯·
  rpc revokeApply(RevokeApplyReq) returns (RevokeApplyResp);
  //éåºç¾¤
  rpc quitGroup(QuitGroupReq) returns (QuitGroupResp);
  //è·åæå®ç¾¤ä¿¡æ¯
  rpc getGroupsInfo(GetGroupsInfoReq) returns (GetGroupsInfoResp);
  //è®¾ç½®ç¾¤ä¿¡æ¯
  rpc setGroupInfo(SetGroupInfoReq) returns (SetGroupInfoResp);
  rpc setGroupInfoEx(SetGroupInfoExReq) returns (SetGroupInfoExResp);
  rpc setGroupInfoExForAll(SetGroupInfoExForAllReq) returns (SetGroupInfoExForAllResp);
  //ï¼ä»¥ç®¡çåæç¾¤ä¸»èº«ä»½ï¼è·åç¾¤çå ç¾¤ç³è¯·
  rpc getGroupApplicationList(GetGroupApplicationListReq) returns (GetGroupApplicationListResp);
  //è·åç¨æ·èªå·±çä¸»å¨å ç¾¤ç³è¯·
  rpc getUserReqApplicationList(GetUserReqApplicationListReq) returns (GetUserReqApplicationListResp);
  // è·åè¯¥ç¾¤ç¨æ·çå ç¾¤ç³è¯·
  rpc getGroupUsersReqApplicationList(getGroupUsersReqApplicationListReq) returns (getGroupUsersReqApplicationListResp);
  rpc getSpecifiedUserGroupRequestInfo(GetSpecifiedUserGroupRequestInfoReq) returns (GetSpecifiedUserGroupRequestInfoResp);
  //è½¬è®©ç¾¤ä¸»
  rpc transferGroupOwner(TransferGroupOwnerReq) returns (TransferGroupOwnerResp);
  //ç¾¤ä¸»æç®¡çåå¤çè¿ç¾¤ç³è¯·
  rpc groupApplicationResponse(GroupApplicationResponseReq) returns (GroupApplicationResponseResp);
  //è·åæä¸ªç¾¤çç¾¤æå
  rpc getGroupMemberList(GetGroupMemberListReq) returns (GetGroupMemberListResp);
  //è·åæä¸ªç¾¤çæå®ç¾¤æå
  rpc getGroupMembersInfo(GetGroupMembersInfoReq) returns (GetGroupMembersInfoResp);
  //è¸¢åºç¾¤
  rpc kickGroupMember(KickGroupMemberReq) returns (KickGroupMemberResp);
  //å°ç¦ç¾¤ç»æå
  rpc blockGroupMember(BlockGroupMemberReq) returns (BlockGroupMemberResp);
  //ç¾¤ç»å°ç¦åè¡¨
  rpc groupMemberBlocks(GroupMemberBlocksReq) returns (GroupMemberBlocksResp);
  //å é¤ç¾¤ç»å°ç¦æå
  rpc DeleteBlockGroupMember(DeleteBlockGroupMemberReq) returns (DeleteBlockGroupMemberResp);

  // ä»å°ç¦æåæå¥ç¾¤ç»
  rpc AfreshJoinGroup(AfreshJoinGroupReq) returns (AfreshJoinGroupResp);


  //è·åæä¸ªäººå·²å å¥ç¾¤
  rpc getJoinedGroupList(GetJoinedGroupListReq) returns (GetJoinedGroupListResp);
  //éè¯·æäºäººè¿ç¾¤
  rpc inviteUserToGroup(InviteUserToGroupReq) returns (InviteUserToGroupResp);

  rpc getGroups(GetGroupsReq) returns (GetGroupsResp);
  rpc getGroupMembersCMS(GetGroupMembersCMSReq) returns (GetGroupMembersCMSResp);

  //è§£æ£ç¾¤
  rpc dismissGroup(DismissGroupReq) returns (DismissGroupResp);
  //å¯¹æä¸ªç¾¤æåç¦è¨
  rpc muteGroupMember(MuteGroupMemberReq) returns (MuteGroupMemberResp);
  //å¯¹æä¸ªç¾¤æååæ¶ç¦è¨
  rpc cancelMuteGroupMember(CancelMuteGroupMemberReq) returns (CancelMuteGroupMemberResp);
  //å¯¹æä¸ªç¾¤ç¦è¨
  rpc muteGroup(MuteGroupReq) returns (MuteGroupResp);
  //å¯¹æä¸ªç¾¤åæ¶ç¦è¨
  rpc cancelMuteGroup(CancelMuteGroupReq) returns (CancelMuteGroupResp);

  //è®¾ç½®ç¾¤æåä¿¡æ¯
  rpc setGroupMemberInfo(SetGroupMemberInfoReq) returns (SetGroupMemberInfoResp);
  //è·åç¾¤ä¿¡æ¯hashå¼
  rpc getGroupAbstractInfo(GetGroupAbstractInfoReq) returns (GetGroupAbstractInfoResp);
  //è·åæä¸ªç¨æ·å¨æå®ç¾¤ä¸­çä¿¡æ¯
  rpc getUserInGroupMembers(GetUserInGroupMembersReq) returns (GetUserInGroupMembersResp);
  //è·åç¾¤æåç¨æ·ID
  rpc getGroupMemberUserIDs(GetGroupMemberUserIDsReq) returns (GetGroupMemberUserIDsResp);
  //æ¥è¯¢ç¾¤ç»ä¸­å¯¹åºçº§å«çæå
  rpc GetGroupMemberRoleLevel(GetGroupMemberRoleLevelReq) returns (GetGroupMemberRoleLevelResp);

  rpc GetGroupInfoCache(GetGroupInfoCacheReq) returns (GetGroupInfoCacheResp);
  rpc GetGroupMemberCache(GetGroupMemberCacheReq) returns (GetGroupMemberCacheResp);

  rpc GroupCreateCount(GroupCreateCountReq) returns (GroupCreateCountResp);

  rpc NotificationUserInfoUpdate(notificationUserInfoUpdateReq) returns (notificationUserInfoUpdateResp);

  rpc getIncrementalGroupMember(getIncrementalGroupMemberReq) returns (getIncrementalGroupMemberResp);
  rpc BatchGetIncrementalGroupMember(BatchGetIncrementalGroupMemberReq) returns (BatchGetIncrementalGroupMemberResp);
  rpc getIncrementalJoinGroup(getIncrementalJoinGroupReq) returns (getIncrementalJoinGroupResp);

  rpc GetFullGroupMemberUserIDs(GetFullGroupMemberUserIDsReq) returns (GetFullGroupMemberUserIDsResp);
  rpc GetGroupKeyVersion(GetGroupKeyVersionReq) returns (GetGroupKeyVersionResp);

  rpc GetFullJoinGroupIDs(GetFullJoinGroupIDsReq) returns (GetFullJoinGroupIDsResp);
  //æ´æ°ç¾¤è§é¢è®°å½
  rpc UpdateGroupRoomRecord(UpdateGroupRoomRecordReq) returns (UpdateGroupRoomRecordResp);

}
